{"version":3,"file":"LiveChats-Cl4OB0-n.js","sources":["../../src/views/app/liveChats/LiveChatCard.vue","../../src/views/app/liveChats/LiveChats.vue"],"sourcesContent":["<template>\r\n  <div class=\"bg-gradient-to-br from-slate-800/90 via-slate-900/90 to-black/90 backdrop-blur-xl rounded-2xl border border-slate-700/50 overflow-hidden flex flex-col shadow-2xl h-[75vh]\">\r\n    <!-- Chat header -->\r\n    <div class=\"px-4 py-3 bg-gradient-to-r from-slate-900/80 via-slate-800/80 to-slate-900/80 backdrop-blur-md border-b border-slate-700/50\">\r\n      <div class=\"flex items-center justify-between\">\r\n        <div class=\"flex items-center gap-3\">\r\n          <!-- Live indicator -->\r\n          <div class=\"relative\">\r\n            <div class=\"w-2.5 h-2.5 bg-green-500 rounded-full animate-pulse shadow-lg shadow-green-500/50\"></div>\r\n            <div class=\"absolute inset-0 w-2.5 h-2.5 bg-green-500 rounded-full animate-ping opacity-30\"></div>\r\n          </div>\r\n          \r\n          <div>\r\n            <h3 class=\"font-bold text-sm text-white\">{{ stationData.name }}</h3>\r\n            <p class=\"text-xs text-slate-400\">{{ stationData.frequency || stationData.description }}</p>\r\n          </div>\r\n        </div>\r\n        \r\n        <!-- Online counter -->\r\n        <div class=\"bg-gradient-to-r from-blue-600/20 to-purple-600/20 border border-blue-600/30 text-blue-400 text-xs px-2 py-1 rounded-full font-medium\">\r\n          {{ stationData.listeners }} online\r\n        </div>\r\n      </div>\r\n    </div>\r\n    \r\n    <!-- Chat messages -->\r\n    <div ref=\"chatContainer\" class=\"flex-1 overflow-y-auto p-3 space-y-2 custom-scrollbar\">\r\n      <div v-for=\"(message, index) in filteredMessages\" :key=\"message.id\" \r\n           class=\"message-item opacity-0 animate-fade-in group\" \r\n           :style=\"`animation-delay: ${index * 0.05}s`\">\r\n        \r\n        <!-- System message -->\r\n        <div v-if=\"message.message_type === 'system'\" class=\"text-center\">\r\n          <div class=\"text-xs text-slate-400 bg-slate-800/60 backdrop-blur-sm rounded-full px-3 py-1 border border-slate-600/30 inline-block\">\r\n            {{ message.message }}\r\n          </div>\r\n        </div>\r\n        \r\n        <!-- Moderator message -->\r\n        <div v-else-if=\"message.message_type === 'moderator'\" class=\"text-center relative\">\r\n          <div class=\"text-xs text-yellow-400 bg-yellow-900/20 backdrop-blur-sm rounded-full px-3 py-1 border border-yellow-600/30 inline-block\">\r\n            <span class=\"font-bold\">MOD:</span> {{ message.message }}\r\n          </div>\r\n          <!-- Delete button for moderator messages -->\r\n          <button\r\n            @click=\"deleteMessage(message.id)\"\r\n            class=\"absolute -right-6 top-1/2 transform -translate-y-1/2 opacity-0 group-hover:opacity-100 transition-opacity duration-200 bg-red-600 hover:bg-red-700 text-white rounded-full p-1\"\r\n          >\r\n            <XIcon class=\"h-3 w-3\" />\r\n          </button>\r\n        </div>\r\n        \r\n        <!-- User message -->\r\n        <div v-else :class=\"[\r\n          'flex items-start gap-2 relative',\r\n          isCurrentUserMessage(message) ? 'flex-row-reverse' : ''\r\n        ]\">\r\n          <!-- Avatar -->\r\n          <div class=\"w-7 h-7 rounded-lg overflow-hidden flex-shrink-0 bg-slate-700 border border-slate-600/50\">\r\n            <img v-if=\"message.user?.image_url\" :src=\"message.user.image_url\" :alt=\"message.user.name\" class=\"w-full h-full object-cover\" />\r\n            <div v-else class=\"w-full h-full flex items-center justify-center bg-gradient-to-br from-blue-500 to-purple-500 text-white text-xs font-bold\">\r\n              {{ getUserInitials(message.user?.name) }}\r\n            </div>\r\n          </div>\r\n          \r\n          <!-- Message content -->\r\n          <div class=\"flex-1 min-w-0\" :class=\"isCurrentUserMessage(message) ? 'mr-2' : ''\">\r\n            <div :class=\"[\r\n              'rounded-lg px-3 py-2 backdrop-blur-sm',\r\n              isCurrentUserMessage(message) \r\n                ? 'bg-gradient-to-r from-blue-600/80 to-purple-600/80 border border-blue-500/30 ml-8' \r\n                : 'bg-slate-700/60 border border-slate-600/30'\r\n            ]\">\r\n              <div :class=\"[\r\n                'flex items-center gap-2 mb-1',\r\n                isCurrentUserMessage(message) ? 'justify-end' : ''\r\n              ]\">\r\n                <span class=\"text-xs font-medium\" :class=\"[\r\n                  getUsernameColor(message.user?.name),\r\n                  isCurrentUserMessage(message) ? 'text-blue-200' : ''\r\n                ]\">\r\n                  {{ isCurrentUserMessage(message) ? 'You' : (message.user?.name || 'Anonymous') }}\r\n                </span>\r\n                <span class=\"text-xs text-slate-500\">{{ formatTimestamp(message.created_at) }}</span>\r\n              </div>\r\n              <p :class=\"[\r\n                'text-xs break-words leading-relaxed',\r\n                isCurrentUserMessage(message) ? 'text-white text-right' : 'text-slate-200'\r\n              ]\">{{ message.message }}</p>\r\n            </div>\r\n          </div>\r\n          \r\n          <!-- Delete button for user messages -->\r\n          <button\r\n            @click=\"deleteMessage(message.id)\"\r\n            :class=\"[\r\n              'opacity-0 group-hover:opacity-100 transition-opacity duration-200 bg-red-600 hover:bg-red-700 text-white rounded-full p-1',\r\n              isCurrentUserMessage(message) ? 'mr-2' : 'ml-2'\r\n            ]\"\r\n          >\r\n            <XIcon class=\"h-3 w-3\" />\r\n          </button>\r\n        </div>\r\n      </div>\r\n      \r\n      <!-- Typing indicator -->\r\n      <div v-if=\"isTyping\" class=\"flex items-center gap-2 text-slate-400 text-xs\">\r\n        <div class=\"w-6 h-6 rounded-lg overflow-hidden flex-shrink-0 bg-slate-700\">\r\n          <div class=\"w-full h-full flex items-center justify-center bg-gradient-to-br from-green-500 to-blue-500 text-white text-xs\">\r\n            T\r\n          </div>\r\n        </div>\r\n        <div class=\"flex items-center gap-2\">\r\n          <span class=\"font-medium\">Someone is typing</span>\r\n          <div class=\"typing-dots\">\r\n            <span class=\"dot bg-blue-500\"></span>\r\n            <span class=\"dot bg-yellow-500\"></span>\r\n            <span class=\"dot bg-red-500\"></span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Empty messages state -->\r\n      <div v-if=\"filteredMessages.length === 0\" class=\"text-center py-8\">\r\n        <div class=\"text-slate-500 text-xs\">\r\n          <MessageCircleIcon class=\"h-8 w-8 mx-auto mb-2 opacity-50\" />\r\n          <p>No messages yet. Be the first to start the conversation!</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    \r\n    <!-- Chat input -->\r\n    <div class=\"p-3 border-t border-slate-700/50 bg-gradient-to-r from-slate-900/80 via-slate-800/80 to-slate-900/80\">\r\n      <div class=\"flex gap-2\">\r\n        <textarea \r\n          v-model=\"newMessage\" \r\n          placeholder=\"Type a message...\" \r\n          rows=\"1\"\r\n          class=\"flex-1 bg-slate-700/70 border border-slate-600/50 rounded-lg py-3 px-4 text-white text-sm focus:outline-none focus:ring-1 focus:ring-blue-500 focus:border-blue-500 placeholder-slate-400 transition-all duration-300 resize-none min-h-[44px] max-h-32 leading-relaxed\"\r\n          @keydown.enter.exact.prevent=\"sendMessage\"\r\n          @keydown.enter.shift.exact=\"handleNewLine\"\r\n          @input=\"handleInputResize\"\r\n        ></textarea>\r\n        \r\n        <button \r\n          @click=\"sendMessage\" \r\n          :disabled=\"!canSendMessage\"\r\n          class=\"bg-gradient-to-r from-blue-600 to-purple-600 hover:from-purple-600 hover:to-red-600 text-white font-medium px-4 py-3 rounded-lg transition-all duration-300 transform hover:scale-105 disabled:opacity-50 disabled:cursor-not-allowed disabled:scale-100 text-sm self-end\"\r\n        >\r\n          <SendIcon class=\"h-4 w-4\" />\r\n        </button>\r\n      </div>\r\n      \r\n      <!-- Info text -->\r\n      <div class=\"mt-2 flex items-center gap-1\">\r\n        <InfoIcon class=\"h-3 w-3 text-slate-500\" />\r\n        <span class=\"text-xs text-slate-500\">\r\n          {{ canSendMessage ? 'Press Enter to send, Shift+Enter for new line' : 'Login required to chat' }}\r\n        </span>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, computed, onMounted, nextTick, watch } from 'vue';\r\nimport { useStore } from 'vuex';\r\nimport { Send as SendIcon, Info as InfoIcon, MessageCircle as MessageCircleIcon, X as XIcon } from 'lucide-vue-next';\r\n\r\n// Props\r\nconst props = defineProps({\r\n  stationData: {\r\n    type: Object,\r\n    required: true\r\n  }\r\n});\r\n\r\n// Store\r\nconst store = useStore();\r\n\r\n// Local state\r\nconst chatContainer = ref(null);\r\nconst newMessage = ref('');\r\nconst isTyping = ref(false);\r\nconst typingTimeout = ref(null);\r\nconst onlineUsers = ref(0);\r\n\r\n// Computed - Filter messages for this specific station\r\nconst filteredMessages = computed(() => {\r\n  const allMessages = store.getters.livechatmessages || [];\r\n  return allMessages\r\n    .filter(message => message.station_id === props.stationData.id && message.is_visible)\r\n    .sort((a, b) => new Date(a.created_at) - new Date(b.created_at))\r\n    .slice(-50); // Keep last 50 messages for performance\r\n});\r\n\r\n// Current user\r\nconst currentUser = computed(() => store.getters.authuser);\r\n\r\n// Check if user can send messages\r\nconst canSendMessage = computed(() => {\r\n  return currentUser.value && currentUser.value.id && newMessage.value.trim().length > 0;\r\n});\r\n\r\n// Check if message is from current user\r\nconst isCurrentUserMessage = (message) => {\r\n  return currentUser.value && message.user_id === currentUser.value.id;\r\n};\r\n\r\n// Handle input resize\r\nconst handleInputResize = (event) => {\r\n  const target = event.target;\r\n  target.style.height = 'auto';\r\n  target.style.height = Math.min(target.scrollHeight, 128) + 'px';\r\n  handleTyping();\r\n};\r\n\r\n// Handle new line\r\nconst handleNewLine = (event) => {\r\n  // Allow default behavior for Shift+Enter (new line)\r\n};\r\n\r\n// Delete message function\r\nconst deleteMessage = async (messageId) => {\r\n  try {\r\n    let data = {\r\n      message_id:messageId\r\n    }\r\n    await store.dispatch('deleteLiveChatMessage', data);\r\n    store.dispatch('template_play_delete_file', 'Message deleted');\r\n  } catch (error) {\r\n    console.error('Failed to delete message:', error);\r\n    store.dispatch('template_play_error_file', 'Failed to delete message');\r\n  }\r\n};\r\n\r\n// Send message function\r\nconst sendMessage = async () => {\r\n  if (!canSendMessage.value) return;\r\n  \r\n  const messageData = {\r\n    station_id: props.stationData.id,\r\n    message: newMessage.value.trim(),\r\n    user_id: currentUser.value.id,\r\n    message_type: 'user'\r\n  };\r\n  \r\n  try {\r\n    // Dispatch to store to send message\r\n    await store.dispatch('sendLiveChatMessage', messageData);\r\n    newMessage.value = '';\r\n    \r\n    nextTick(() => {\r\n      scrollToBottom();\r\n    });\r\n  } catch (error) {\r\n    console.error('Failed to send message:', error);\r\n    store.dispatch('template_play_error_file', 'Failed to send message');\r\n  }\r\n};\r\n\r\n// Handle typing indicator\r\nconst handleTyping = () => {\r\n  if (!currentUser.value) return;\r\n  \r\n  // Clear existing timeout\r\n  if (typingTimeout.value) {\r\n    clearTimeout(typingTimeout.value);\r\n  }\r\n  \r\n  // Start typing indicator\r\n  isTyping.value = true;\r\n  \r\n  // Set timeout to stop typing\r\n  typingTimeout.value = setTimeout(() => {\r\n    isTyping.value = false;\r\n  }, 2000);\r\n};\r\n\r\n// Scroll to bottom\r\nconst scrollToBottom = () => {\r\n  if (chatContainer.value) {\r\n    chatContainer.value.scrollTop = chatContainer.value.scrollHeight;\r\n  }\r\n};\r\n\r\n// Format timestamp\r\nconst formatTimestamp = (timestamp) => {\r\n  if (!timestamp) return '';\r\n  \r\n  const date = new Date(timestamp);\r\n  const now = new Date();\r\n  const diff = now - date;\r\n  \r\n  // If less than 1 hour, show relative time\r\n  if (diff < 3600000) {\r\n    const minutes = Math.floor(diff / 60000);\r\n    return minutes < 1 ? 'now' : `${minutes}m`;\r\n  }\r\n  \r\n  // If today, show time\r\n  if (date.toDateString() === now.toDateString()) {\r\n    return date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\r\n  }\r\n  \r\n  // Otherwise show date\r\n  return date.toLocaleDateString([], { month: 'short', day: 'numeric' });\r\n};\r\n\r\n// Get user initials\r\nconst getUserInitials = (name) => {\r\n  if (!name) return 'A';\r\n  const names = name.split(' ');\r\n  if (names.length >= 2) {\r\n    return (names[0].charAt(0) + names[1].charAt(0)).toUpperCase();\r\n  }\r\n  return name.charAt(0).toUpperCase();\r\n};\r\n\r\n// Get username color\r\nconst getUsernameColor = (username) => {\r\n  if (!username) return 'text-slate-400';\r\n  \r\n  const colors = [\r\n    'text-blue-400',\r\n    'text-yellow-400',\r\n    'text-red-400',\r\n    'text-green-400',\r\n    'text-purple-400',\r\n    'text-cyan-400',\r\n    'text-pink-400',\r\n    'text-orange-400'\r\n  ];\r\n  \r\n  let hash = 0;\r\n  for (let i = 0; i < username.length; i++) {\r\n    hash = ((hash << 5) - hash) + username.charCodeAt(i);\r\n    hash |= 0;\r\n  }\r\n  \r\n  const colorIndex = Math.abs(hash) % colors.length;\r\n  return colors[colorIndex];\r\n};\r\n\r\n// Update online users count\r\nconst updateOnlineUsers = () => {\r\n  // Simulate online users based on station popularity\r\n  const baseUsers = Math.floor(Math.random() * 50) + 10;\r\n  const messageCount = filteredMessages.value.length;\r\n  onlineUsers.value = baseUsers + Math.floor(messageCount / 5);\r\n};\r\n\r\n// Watch for new messages and scroll to bottom\r\nwatch(filteredMessages, (newMessages) => {\r\n  nextTick(() => {\r\n    scrollToBottom();\r\n  });\r\n  updateOnlineUsers();\r\n}, { deep: true });\r\n\r\n// Mount lifecycle\r\nonMounted(() => {\r\n  scrollToBottom();\r\n  updateOnlineUsers();\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n/* Custom scrollbar */\r\n.custom-scrollbar {\r\n  scrollbar-width: thin;\r\n  scrollbar-color: rgba(59, 130, 246, 0.5) transparent;\r\n}\r\n\r\n.custom-scrollbar::-webkit-scrollbar {\r\n  width: 4px;\r\n}\r\n\r\n.custom-scrollbar::-webkit-scrollbar-track {\r\n  background: transparent;\r\n}\r\n\r\n.custom-scrollbar::-webkit-scrollbar-thumb {\r\n  background: linear-gradient(to bottom, #3b82f6, #8b5cf6);\r\n  border-radius: 4px;\r\n}\r\n\r\n.custom-scrollbar::-webkit-scrollbar-thumb:hover {\r\n  background: linear-gradient(to bottom, #2563eb, #7c3aed);\r\n}\r\n\r\n/* Typing dots animation */\r\n.typing-dots {\r\n  display: inline-flex;\r\n  align-items: center;\r\n  gap: 1px;\r\n  height: 1em;\r\n}\r\n\r\n.dot {\r\n  width: 3px;\r\n  height: 3px;\r\n  border-radius: 50%;\r\n  animation: dot-flashing 1.2s infinite alternate;\r\n}\r\n\r\n.dot:nth-child(1) {\r\n  animation-delay: 0s;\r\n}\r\n\r\n.dot:nth-child(2) {\r\n  animation-delay: 0.2s;\r\n}\r\n\r\n.dot:nth-child(3) {\r\n  animation-delay: 0.4s;\r\n}\r\n\r\n@keyframes dot-flashing {\r\n  0% {\r\n    opacity: 0.3;\r\n    transform: scale(0.8);\r\n  }\r\n  100% {\r\n    opacity: 1;\r\n    transform: scale(1.2);\r\n  }\r\n}\r\n\r\n/* Fade in animation */\r\n@keyframes fade-in {\r\n  from {\r\n    opacity: 0;\r\n    transform: translateY(10px);\r\n  }\r\n  to {\r\n    opacity: 1;\r\n    transform: translateY(0);\r\n  }\r\n}\r\n\r\n.animate-fade-in {\r\n  animation: fade-in 0.3s forwards ease-out;\r\n}\r\n\r\n.message-item {\r\n  animation-fill-mode: forwards;\r\n}\r\n\r\n/* Button animations */\r\nbutton:not(:disabled):active {\r\n  transform: scale(0.95);\r\n}\r\n\r\n/* Input focus */\r\ninput:focus {\r\n  box-shadow: 0 0 0 2px rgba(59, 130, 246, 0.2);\r\n}\r\n\r\n/* Delete button styling */\r\n.group:hover .opacity-0 {\r\n  opacity: 1;\r\n}\r\n\r\n/* Responsive */\r\n@media (max-width: 768px) {\r\n  .text-xs {\r\n    font-size: 0.7rem;\r\n  }\r\n}\r\n</style>","<template>\r\n  <div class=\" \">\r\n    <!-- Header -->\r\n    <div class=\"mb-8\">\r\n      <div class=\"flex items-center gap-4 mb-2\">\r\n        <div class=\"w-12 h-12 bg-gradient-to-br from-blue-600 to-purple-600 rounded-2xl flex items-center justify-center shadow-lg\">\r\n          <MessageCircleIcon class=\"h-6 w-6 text-white\" />\r\n        </div>\r\n        <div>\r\n          <h1 class=\"text-3xl font-bold text-gray-900 dark:text-white\">Live Chats</h1>\r\n          <p class=\"text-gray-600 dark:text-gray-300\">Real-time conversations across all Capital Radio stations</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Live Chat Grid -->\r\n    <div class=\"grid grid-cols-1 lg:grid-cols-2 xl:grid-cols-3 gap-6\">\r\n      <LiveChatCard \r\n        v-for=\"station in filteredStations\" \r\n        :key=\"station.id\"\r\n        :station-data=\"station\"\r\n        class=\"transform hover:scale-105 transition-all duration-300\"\r\n      />\r\n    </div>\r\n\r\n    <!-- Empty state -->\r\n    <div v-if=\"filteredStations.length === 0\" class=\"text-center py-16\">\r\n      <div class=\"w-24 h-24 bg-gray-200 dark:bg-slate-700 rounded-full flex items-center justify-center mx-auto mb-4\">\r\n        <RadioIcon class=\"h-12 w-12 text-gray-400 dark:text-slate-500\" />\r\n      </div>\r\n      <h3 class=\"text-xl font-semibold text-gray-900 dark:text-white mb-2\">\r\n        {{ searchQuery ? 'No stations found' : 'No Active Stations' }}\r\n      </h3>\r\n      <p class=\"text-gray-600 dark:text-gray-400\">\r\n        {{ searchQuery ? 'Try adjusting your search terms.' : 'Radio stations will appear here when they go live.' }}\r\n      </p>\r\n      <button \r\n        v-if=\"!searchQuery\"\r\n        @click=\"fetchStations\"\r\n        class=\"mt-4 bg-gradient-to-r from-blue-600 to-purple-600 hover:from-purple-600 hover:to-red-600 text-white font-medium px-6 py-3 rounded-xl transition-all duration-300 transform hover:scale-105\"\r\n      >\r\n        Refresh Stations\r\n      </button>\r\n    </div>\r\n\r\n    <!-- Loading state -->\r\n    <div v-if=\"loading\" class=\"grid grid-cols-1 lg:grid-cols-2 xl:grid-cols-3 gap-6\">\r\n      <div v-for=\"i in 6\" :key=\"i\" class=\"h-96 bg-gray-200 dark:bg-slate-800 rounded-2xl animate-pulse\"></div>\r\n    </div>\r\n\r\n    <!-- Floating refresh button -->\r\n    <button \r\n      @click=\"refreshAll\"\r\n      class=\"fixed bottom-6 right-6 w-14 h-14 bg-gradient-to-r from-blue-600 to-purple-600 hover:from-purple-600 hover:to-red-600 text-white rounded-full shadow-2xl hover:shadow-blue-500/25 transition-all duration-300 transform hover:scale-110 flex items-center justify-center group\"\r\n      :class=\"{ 'animate-spin': isRefreshing }\"\r\n      :disabled=\"isRefreshing\"\r\n    >\r\n      <RefreshCwIcon class=\"h-6 w-6 group-hover:rotate-180 transition-transform duration-500\" />\r\n    </button>\r\n\r\n    <!-- Connection status indicator -->\r\n    <div class=\"fixed bottom-6 left-6 flex items-center gap-2 bg-white dark:bg-slate-800 rounded-full px-4 py-2 shadow-lg border border-gray-200 dark:border-slate-700\">\r\n      <div :class=\"[\r\n        'w-2 h-2 rounded-full',\r\n        isConnected ? 'bg-green-500 animate-pulse' : 'bg-red-500'\r\n      ]\"></div>\r\n      <span class=\"text-xs font-medium text-gray-700 dark:text-gray-300\">\r\n        {{ isConnected ? 'Connected' : 'Disconnected' }}\r\n      </span>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, computed, onMounted, onUnmounted, watch } from 'vue';\r\nimport { useStore } from 'vuex';\r\nimport LiveChatCard from './LiveChatCard.vue';\r\nimport { \r\n  MessageCircle as MessageCircleIcon,\r\n  Radio as RadioIcon,\r\n  RefreshCw as RefreshCwIcon\r\n} from 'lucide-vue-next';\r\n\r\nconst store = useStore();\r\n\r\n// State\r\nconst loading = ref(false);\r\nconst isRefreshing = ref(false);\r\nconst messagesInterval = ref(null);\r\nconst isConnected = ref(true);\r\nconst searchQuery = ref('');\r\nconst filterType = ref('all');\r\nconst currentPage = ref(1);\r\n\r\n// Computed properties from store\r\nconst stations = computed(() => store.getters.stations || []);\r\nconst allMessages = computed(() => store.getters.liveChatmessages || []);\r\n\r\n// Filter stations based on search and filter type\r\nconst filteredStations = computed(() => {\r\n  let filtered = stations.value;\r\n  \r\n  if (searchQuery.value.trim()) {\r\n    const query = searchQuery.value.toLowerCase();\r\n    filtered = filtered.filter(station => \r\n      station.name?.toLowerCase().includes(query) ||\r\n      station.description?.toLowerCase().includes(query) ||\r\n      station.frequency?.toLowerCase().includes(query)\r\n    );\r\n  }\r\n  \r\n  if (filterType.value === 'active') {\r\n    const activeStationIds = new Set(\r\n      allMessages.value\r\n        .filter(msg => msg.is_visible)\r\n        .map(msg => msg.station_id)\r\n    );\r\n    filtered = filtered.filter(station => activeStationIds.has(station.id));\r\n  }\r\n  \r\n  return filtered;\r\n});\r\n\r\n// Methods\r\nconst fetchStations = async () => {\r\n  const data = { per_page: 50 };\r\n  const page = currentPage.value;\r\n  \r\n  try {\r\n    loading.value = true;\r\n    await store.dispatch('fetch_stations', { data, page });\r\n  } catch (error) {\r\n    console.error('Failed to fetch stations:', error);\r\n    store.dispatch('template_play_error_file', 'Failed to load stations');\r\n  } finally {\r\n    loading.value = false;\r\n  }\r\n};\r\n\r\nconst loadMessages = async () => {\r\n  try {\r\n    await store.dispatch('fetchAllMessages');\r\n  } catch (error) {\r\n    console.error('Failed to load messages:', error);\r\n  }\r\n};\r\n\r\nconst startMessagesAutoRefresh = () => {\r\n  messagesInterval.value = setInterval(async () => {\r\n    try {\r\n      await loadMessages();\r\n    } catch (error) {\r\n      console.error('Auto-refresh messages failed:', error);\r\n    }\r\n  }, 4000); // Fetch messages every 4 seconds\r\n};\r\n\r\nconst stopMessagesAutoRefresh = () => {\r\n  if (messagesInterval.value) {\r\n    clearInterval(messagesInterval.value);\r\n    messagesInterval.value = null;\r\n  }\r\n};\r\n\r\nconst refreshAll = async () => {\r\n  if (isRefreshing.value) return;\r\n  \r\n  isRefreshing.value = true;\r\n  \r\n  try {\r\n    await Promise.all([\r\n      fetchStations(),\r\n      loadMessages()\r\n    ]);\r\n    \r\n    store.dispatch('template_play_success_file_no_msg');\r\n  } catch (error) {\r\n    console.error('Failed to refresh:', error);\r\n    store.dispatch('template_play_error_file', 'Failed to refresh data');\r\n  } finally {\r\n    isRefreshing.value = false;\r\n  }\r\n};\r\n\r\nconst initializeWebSocket = () => {\r\n  store.dispatch('connectWebSocket');\r\n};\r\n\r\nconst disconnectWebSocket = () => {\r\n  store.dispatch('disconnectWebSocket');\r\n};\r\n\r\n// Watch for connection status changes\r\nwatch(() => store.getters.connectionStatus, (status) => {\r\n  isConnected.value = status === 'connected';\r\n});\r\n\r\n// Clear search when changing filter type\r\nwatch(filterType, () => {\r\n  searchQuery.value = '';\r\n});\r\n\r\n// Lifecycle\r\nonMounted(async () => {\r\n  try {\r\n    await fetchStations();\r\n    await loadMessages();\r\n    initializeWebSocket();\r\n    startMessagesAutoRefresh(); // Start auto-refresh for messages\r\n  } catch (error) {\r\n    console.error('Failed to initialize live chats:', error);\r\n    store.dispatch('template_play_error_file', 'Failed to initialize live chats');\r\n  }\r\n});\r\n\r\nonUnmounted(() => {\r\n  stopMessagesAutoRefresh(); // Stop auto-refresh\r\n  disconnectWebSocket();\r\n});\r\n</script>"],"names":["props","__props","store","useStore","chatContainer","ref","newMessage","isTyping","typingTimeout","onlineUsers","filteredMessages","computed","message","a","b","currentUser","canSendMessage","isCurrentUserMessage","handleInputResize","event","target","handleTyping","handleNewLine","deleteMessage","messageId","data","error","sendMessage","messageData","nextTick","scrollToBottom","formatTimestamp","timestamp","date","now","diff","minutes","getUserInitials","name","names","getUsernameColor","username","colors","hash","i","colorIndex","updateOnlineUsers","baseUsers","messageCount","watch","newMessages","onMounted","_openBlock","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_toDisplayString","_hoisted_6","_hoisted_7","_Fragment","_renderList","index","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_cache","$event","_createVNode","_unref","XIcon","_normalizeClass","_hoisted_13","_a","_hoisted_15","_b","_c","_d","_hoisted_16","_hoisted_18","_hoisted_19","_hoisted_20","MessageCircleIcon","_hoisted_21","_hoisted_22","SendIcon","_hoisted_25","InfoIcon","_hoisted_26","loading","isRefreshing","messagesInterval","isConnected","searchQuery","filterType","currentPage","stations","allMessages","filteredStations","filtered","query","station","activeStationIds","msg","fetchStations","page","loadMessages","startMessagesAutoRefresh","stopMessagesAutoRefresh","refreshAll","initializeWebSocket","disconnectWebSocket","status","onUnmounted","_createBlock","LiveChatCard","RadioIcon","RefreshCwIcon","_hoisted_12"],"mappings":"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"}