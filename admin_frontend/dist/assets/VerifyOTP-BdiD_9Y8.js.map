{"version":3,"file":"VerifyOTP-BdiD_9Y8.js","sources":["../../src/views/auth/VerifyOTP.vue"],"sourcesContent":["<template>\r\n  <div class=\"max-w-md w-full space-y-6 bg-white/95 dark:bg-slate-800/95 backdrop-blur-sm p-10 rounded-xl shadow-2xl border border-purple-200 dark:border-slate-700\">\r\n    <!-- Header -->\r\n    <div class=\"text-center\">\r\n      <div class=\"mx-auto w-12 h-12 bg-gradient-to-r from-purple-600 to-orange-500 rounded-full flex items-center justify-center mb-4\">\r\n        <ShieldCheckIcon class=\"w-6 h-6 text-white\" />\r\n      </div>\r\n      <h2 class=\"text-2xl font-bold text-gray-900 dark:text-white\">Verify Your Identity</h2>\r\n      <p class=\"text-gray-600 dark:text-gray-300 mt-1 max-w-sm mx-auto\">\r\n        We've sent a verification code to <strong class=\"text-purple-600 dark:text-purple-400\">{{ maskedEmail }}</strong>. \r\n        Enter the code below to continue.\r\n      </p>\r\n    </div>\r\n\r\n    <!-- Success Message -->\r\n    <div v-if=\"verificationSuccess\" class=\"bg-green-50 dark:bg-green-900/20 border border-green-200 dark:border-green-800 rounded-lg p-4\">\r\n      <div class=\"flex items-start\">\r\n        <CheckCircleIcon class=\"h-5 w-5 text-green-500 mr-3 flex-shrink-0 mt-0.5\" />\r\n        <div>\r\n          <h4 class=\"font-medium text-green-900 dark:text-green-200 mb-1\">Verification successful!</h4>\r\n          <p class=\"text-sm text-green-700 dark:text-green-300\">\r\n            Your identity has been verified. Redirecting you now...\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n \r\n    <!-- Error Alert -->\r\n    <div v-if=\"errorMessage\" class=\"bg-red-50 dark:bg-red-900/20 border border-red-200 dark:border-red-800 rounded-lg p-4\">\r\n      <div class=\"flex items-center\">\r\n        <AlertCircleIcon class=\"h-5 w-5 text-red-500 mr-2\" />\r\n        <span class=\"text-sm text-red-700 dark:text-red-400\">{{ errorMessage }}</span>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Verification Form (hidden after success) -->        \r\n    <form v-if=\"!verificationSuccess\" class=\"space-y-6\" @submit.prevent=\"handleVerifyCode\">\r\n      <!-- OTP Input Fields -->\r\n      <div>\r\n        <label class=\"block text-sm font-semibold text-gray-700 dark:text-gray-300 mb-4 text-center\">\r\n          Enter Verification Code\r\n        </label>\r\n        <div class=\"flex justify-center space-x-3\">\r\n          <input\r\n            v-for=\"(digit, index) in verificationCode\"\r\n            :key=\"index\"\r\n            :ref=\"el => setCodeInputRef(el, index)\"\r\n            v-model=\"verificationCode[index]\"\r\n            type=\"text\"\r\n            maxlength=\"1\"\r\n            class=\"w-12 h-12 text-center text-xl font-bold border border-gray-300 dark:border-slate-600 rounded-lg shadow-sm bg-white dark:bg-slate-700 text-gray-900 dark:text-white focus:outline-none focus:ring-2 focus:ring-purple-500 focus:border-transparent transition-all duration-200\"\r\n            :class=\"{ 'border-red-300 focus:ring-red-500': errorMessage }\"\r\n            @input=\"handleCodeInput($event, index)\"\r\n            @keydown=\"handleKeyDown($event, index)\"\r\n            @paste=\"handlePaste($event, index)\"\r\n          />\r\n        </div>\r\n        <p class=\"mt-3 text-xs text-gray-500 dark:text-gray-400 text-center\">\r\n          Code expires in {{ formatTime(expiryTime) }}\r\n        </p>\r\n      </div>\r\n \r\n      <!-- Submit Button -->\r\n      <button\r\n        type=\"submit\"\r\n        :disabled=\"isLoading || !isCodeComplete\"\r\n        class=\"relative w-full flex justify-center items-center py-3 px-4 border border-transparent text-sm font-semibold rounded-lg text-white bg-gradient-to-r from-purple-600 to-orange-500 hover:from-purple-700 hover:to-orange-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-purple-500 disabled:opacity-50 disabled:cursor-not-allowed transition-all duration-200 shadow-lg hover:shadow-xl transform hover:-translate-y-0.5\"\r\n      >\r\n        <LoaderIcon v-if=\"isLoading\" class=\"w-5 h-5 mr-2 animate-spin\" />\r\n        <ShieldCheckIcon v-else class=\"w-5 h-5 mr-2\" />\r\n        {{ isLoading ? 'Verifying...' : 'Verify Code' }}\r\n      </button>\r\n    </form>\r\n\r\n    <!-- Resend Section -->\r\n    <div v-if=\"!verificationSuccess\" class=\"space-y-4\">\r\n      <div class=\"text-center\">\r\n        <p class=\"text-sm text-gray-600 dark:text-gray-400 mb-4\">Didn't receive the code?</p>\r\n        \r\n        <button\r\n          @click=\"resendCode\"\r\n          :disabled=\"isResending || resendCooldown > 0\"\r\n          class=\"inline-flex items-center px-4 py-2 text-sm font-medium text-purple-600 hover:text-purple-500 dark:text-purple-400 dark:hover:text-purple-300 disabled:text-gray-400 dark:disabled:text-gray-500 transition-colors disabled:cursor-not-allowed\"\r\n        >\r\n          <LoaderIcon v-if=\"isResending\" class=\"animate-spin h-4 w-4 mr-2\" />\r\n          <RotateCcwIcon v-else class=\"w-4 h-4 mr-2\" />\r\n          <span v-if=\"resendCooldown > 0\">\r\n            Resend in {{ resendCooldown }}s\r\n          </span>\r\n          <span v-else-if=\"isResending\">\r\n            Sending...\r\n          </span>\r\n          <span v-else>\r\n            Resend code\r\n          </span>\r\n        </button>\r\n      </div>\r\n\r\n      <!-- Help Section -->\r\n      <div class=\"text-center\">\r\n        <details class=\"text-left\">\r\n          <summary class=\"text-sm text-gray-600 dark:text-gray-400 cursor-pointer hover:text-gray-800 dark:hover:text-gray-200 transition-colors font-medium\">\r\n            Having trouble? View help options\r\n          </summary>\r\n          <div class=\"mt-3 text-xs text-gray-500 dark:text-gray-400 space-y-2 bg-gray-50 dark:bg-slate-700/50 rounded-lg p-4\">\r\n            <p>• Check your spam or junk folder</p>\r\n            <p>• Make sure you entered the correct email address</p>\r\n            <p>• Codes expire after 10 minutes</p>\r\n            <p>• Contact support if you continue having issues</p>\r\n          </div>\r\n        </details>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Divider -->\r\n    <div class=\"mt-8 mb-6\">\r\n      <div class=\"relative\">\r\n        <div class=\"absolute inset-0 flex items-center\">\r\n          <div class=\"w-full border-t border-gray-200 dark:border-slate-600\"></div>\r\n        </div>\r\n        <div class=\"relative flex justify-center text-sm\">\r\n          <span class=\"px-4 bg-white dark:bg-slate-800 text-gray-500 dark:text-gray-400\">Need to change email?</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n \r\n    <!-- Navigation -->\r\n    <div class=\"text-center space-y-4\">\r\n      <button \r\n        @click=\"changeEmail\"\r\n        class=\"inline-flex items-center text-purple-600 hover:text-purple-500 dark:text-purple-400 dark:hover:text-purple-300 transition-colors font-medium text-sm\"\r\n      >\r\n        <ArrowLeftIcon class=\"w-4 h-4 mr-2\" />\r\n        Use different email\r\n      </button>\r\n      \r\n      <div>\r\n        <router-link \r\n          :to=\"{ name: 'Login' }\" \r\n          class=\"text-xs text-gray-500 dark:text-gray-400 hover:text-gray-700 dark:hover:text-gray-200 transition-colors\"\r\n        >\r\n          Back to sign in\r\n        </router-link>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Support -->\r\n    <div class=\"mt-6 text-center\">\r\n      <p class=\"text-xs text-gray-500 dark:text-gray-400\">\r\n        Need help? \r\n        <a href=\"mailto:support@capitalradio.co.ug\" class=\"text-purple-600 hover:text-purple-500 dark:text-purple-400 dark:hover:text-purple-300 transition-colors font-medium\">\r\n          Contact support\r\n        </a>\r\n      </p>\r\n    </div>\r\n  </div>\r\n</template>\r\n \r\n<script setup>\r\nimport { ref, reactive, computed, onMounted, onUnmounted, nextTick } from 'vue';\r\nimport { useRouter, useRoute } from 'vue-router';\r\nimport { useStore } from 'vuex';\r\nimport { \r\n  Loader as LoaderIcon, \r\n  AlertCircle as AlertCircleIcon,\r\n  CheckCircle as CheckCircleIcon,\r\n  ShieldCheck as ShieldCheckIcon,\r\n  RotateCcw as RotateCcwIcon,\r\n  ArrowLeft as ArrowLeftIcon\r\n} from 'lucide-vue-next';\r\n \r\nconst router = useRouter();\r\nconst route = useRoute();\r\nconst store = useStore();\r\n\r\n// Props from URL params or passed data\r\nconst email = ref(route.query.email || '');\r\nconst verificationPurpose = ref(route.query.purpose || 'password_reset');\r\n\r\n// Component state\r\nconst verificationCode = reactive(['', '', '', '', '', '']);\r\nconst codeInputRefs = ref([]);\r\nconst isLoading = ref(false);\r\nconst isResending = ref(false);\r\nconst verificationSuccess = ref(false);\r\nconst errorMessage = ref('');\r\nconst resendCooldown = ref(0);\r\nconst expiryTime = ref(600); // 10 minutes in seconds\r\n\r\nlet cooldownInterval = null;\r\nlet expiryInterval = null;\r\n\r\n// Computed properties\r\nconst maskedEmail = computed(() => {\r\n  if (!email.value) return '';\r\n  const [username, domain] = email.value.split('@');\r\n  const maskedUsername = username.charAt(0) + '*'.repeat(username.length - 2) + username.charAt(username.length - 1);\r\n  return `${maskedUsername}@${domain}`;\r\n});\r\n\r\nconst isCodeComplete = computed(() => {\r\n  return verificationCode.every(digit => digit.length === 1);\r\n});\r\n\r\n// Methods\r\nconst setCodeInputRef = (el, index) => {\r\n  if (el) {\r\n    codeInputRefs.value[index] = el;\r\n  }\r\n};\r\n\r\nconst handleCodeInput = (event, index) => {\r\n  const value = event.target.value.replace(/[^0-9]/g, '');\r\n  verificationCode[index] = value;\r\n\r\n  if (value && index < 5) {\r\n    // Move to next input\r\n    nextTick(() => {\r\n      codeInputRefs.value[index + 1]?.focus();\r\n    });\r\n  }\r\n\r\n  // Auto-submit when code is complete\r\n  if (isCodeComplete.value) {\r\n    nextTick(() => {\r\n      handleVerifyCode();\r\n    });\r\n  }\r\n};\r\n\r\nconst handleKeyDown = (event, index) => {\r\n  if (event.key === 'Backspace' && !verificationCode[index] && index > 0) {\r\n    // Move to previous input on backspace\r\n    codeInputRefs.value[index - 1]?.focus();\r\n  } else if (event.key === 'ArrowLeft' && index > 0) {\r\n    codeInputRefs.value[index - 1]?.focus();\r\n  } else if (event.key === 'ArrowRight' && index < 5) {\r\n    codeInputRefs.value[index + 1]?.focus();\r\n  }\r\n};\r\n\r\nconst handlePaste = (event, index) => {\r\n  event.preventDefault();\r\n  const pastedData = event.clipboardData.getData('text').replace(/[^0-9]/g, '');\r\n  \r\n  for (let i = 0; i < Math.min(pastedData.length, 6 - index); i++) {\r\n    verificationCode[index + i] = pastedData[i];\r\n  }\r\n\r\n  // Focus the last filled input or the next empty one\r\n  const lastIndex = Math.min(index + pastedData.length - 1, 5);\r\n  nextTick(() => {\r\n    codeInputRefs.value[lastIndex]?.focus();\r\n  });\r\n\r\n  // Auto-submit if code is complete\r\n  if (isCodeComplete.value) {\r\n    nextTick(() => {\r\n      handleVerifyCode();\r\n    });\r\n  }\r\n};\r\n\r\nconst handleVerifyCode = async () => {\r\n  if (!isCodeComplete.value) return;\r\n\r\n  try {\r\n    isLoading.value = true;\r\n    errorMessage.value = '';\r\n\r\n    const code = verificationCode.join('');\r\n    \r\n    // Call the verify reset code API directly\r\n    const response = await store.dispatch('verifyResetCode', { \r\n      code: code,\r\n      email: email.value \r\n    });\r\n\r\n    verificationSuccess.value = true;\r\n    \r\n    // Redirect after delay\r\n    setTimeout(() => {\r\n      if (verificationPurpose.value === 'password_reset') {\r\n        router.push({ \r\n          name: 'NewPassword', \r\n          query: { \r\n            token: code, \r\n            email: email.value, \r\n            admin_id: response.data?.data?.admin_id \r\n          } \r\n        });\r\n      } else {\r\n        router.push({ name: 'Login' });\r\n      }\r\n    }, 2000);\r\n\r\n  } catch (error) {\r\n    console.error('Verification error:', error);\r\n    \r\n    // Get error from store or use default message\r\n    errorMessage.value = store.getters.error || error.message || 'Invalid verification code. Please try again.';\r\n    \r\n    // Clear the code inputs\r\n    verificationCode.forEach((_, index) => {\r\n      verificationCode[index] = '';\r\n    });\r\n    \r\n    // Focus first input\r\n    nextTick(() => {\r\n      codeInputRefs.value[0]?.focus();\r\n    });\r\n\r\n  } finally {\r\n    isLoading.value = false;\r\n  }\r\n};\r\n\r\nconst resendCode = async () => {\r\n  try {\r\n    isResending.value = true;\r\n    errorMessage.value = '';\r\n\r\n    // Call the forgot password API to resend code\r\n    await store.dispatch('forgotAdminPassword', email.value);\r\n\r\n    // Start cooldown\r\n    startResendCooldown();\r\n    \r\n    // Reset expiry timer\r\n    expiryTime.value = 600;\r\n\r\n  } catch (error) {\r\n    console.error('Resend error:', error);\r\n    errorMessage.value = store.getters.error || error.message || 'Failed to resend code. Please try again.';\r\n  } finally {\r\n    isResending.value = false;\r\n  }\r\n};\r\n\r\nconst changeEmail = () => {\r\n  router.push({ name: 'ResetPassword' });\r\n};\r\n\r\nconst startResendCooldown = () => {\r\n  resendCooldown.value = 60;\r\n  \r\n  cooldownInterval = setInterval(() => {\r\n    resendCooldown.value--;\r\n    if (resendCooldown.value <= 0) {\r\n      clearInterval(cooldownInterval);\r\n      cooldownInterval = null;\r\n    }\r\n  }, 1000);\r\n};\r\n\r\nconst startExpiryTimer = () => {\r\n  expiryInterval = setInterval(() => {\r\n    expiryTime.value--;\r\n    if (expiryTime.value <= 0) {\r\n      clearInterval(expiryInterval);\r\n      expiryInterval = null;\r\n      errorMessage.value = 'Verification code has expired. Please request a new one.';\r\n    }\r\n  }, 1000);\r\n};\r\n\r\nconst formatTime = (seconds) => {\r\n  const minutes = Math.floor(seconds / 60);\r\n  const remainingSeconds = seconds % 60;\r\n  return `${minutes}:${remainingSeconds.toString().padStart(2, '0')}`;\r\n};\r\n\r\n// Lifecycle\r\nonMounted(() => {\r\n  // Focus first input\r\n  nextTick(() => {\r\n    codeInputRefs.value[0]?.focus();\r\n  });\r\n  \r\n  // Start expiry timer\r\n  startExpiryTimer();\r\n\r\n  // Check if email is provided\r\n  if (!email.value) {\r\n    router.push({ name: 'ResetPassword' });\r\n  }\r\n});\r\n\r\nonUnmounted(() => {\r\n  if (cooldownInterval) {\r\n    clearInterval(cooldownInterval);\r\n  }\r\n  if (expiryInterval) {\r\n    clearInterval(expiryInterval);\r\n  }\r\n});\r\n</script>"],"names":["router","useRouter","route","useRoute","store","useStore","email","ref","verificationPurpose","verificationCode","reactive","codeInputRefs","isLoading","isResending","verificationSuccess","errorMessage","resendCooldown","expiryTime","cooldownInterval","expiryInterval","maskedEmail","computed","username","domain","isCodeComplete","digit","setCodeInputRef","el","index","handleCodeInput","event","value","nextTick","_a","handleVerifyCode","handleKeyDown","_b","_c","handlePaste","pastedData","i","lastIndex","code","response","error","_","resendCode","startResendCooldown","changeEmail","startExpiryTimer","formatTime","seconds","minutes","remainingSeconds","onMounted","onUnmounted"],"mappings":"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"}